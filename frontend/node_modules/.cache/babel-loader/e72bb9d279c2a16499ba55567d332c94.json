{"ast":null,"code":"var _jsxFileName = \"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/VotingPage/VotingPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport \"../../styles/base.css\";\nimport NavBar from \"../../components/Navbar\";\nimport UserMeta from \"../../components/UserMeta\";\nimport winnerImg from \"../../assets/img/mockup/winner.jpeg\";\nimport VoteComponent from \"../../components/VoteComponent\";\nimport Auth from \"../../services/Auth\";\nimport PictureApi from \"../../api/PictureApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VotingPage() {\n  _s();\n\n  // Constants\n  const API_URL = 'https://my.api.mockaroo.com/user.json?key=ae007e80'; //states\n\n  const [users, setUsers] = useState([]);\n  const randomId = Math.floor(Math.random() * 25); // Methods\n  //fetch data \n\n  useEffect(() => {\n    fetch(API_URL).then(response => response.json()).then(json => setUsers(json));\n  }, []);\n  console.log(users[randomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"general-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {\n        onLogout: () => Auth.logout()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), users === [0] && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Data ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this), users != [0] && /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Vote for this style ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"main-img\",\n          src: winnerImg,\n          alt: \"main-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"under-img-container\",\n          children: /*#__PURE__*/_jsxDEV(VoteComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \" Follow us | about SDA | About us \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n_s(VotingPage, \"SjRE+Wh7WTq/CnqUH4T+/qSC3y8=\");\n\n_c = VotingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"VotingPage\");","map":{"version":3,"sources":["/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/VotingPage/VotingPage.jsx"],"names":["React","useState","useEffect","NavBar","UserMeta","winnerImg","VoteComponent","Auth","PictureApi","VotingPage","API_URL","users","setUsers","randomId","Math","floor","random","fetch","then","response","json","console","log","logout"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAClC;AACF,QAAMC,OAAO,GAAE,oDAAf,CAFoC,CAIpC;;AACC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMY,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAjB,CANmC,CAUnC;AACA;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACfe,IAAAA,KAAK,CAACP,OAAD,CAAL,CACGQ,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUR,QAAQ,CAACQ,IAAD,CAF1B;AAGD,GAJS,EAIP,EAJO,CAAT;AAMDC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACE,QAAD,CAAjB;AAEG,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,MAAMN,IAAI,CAACgB,MAAL;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAMIZ,KAAK,KAAK,CAAC,CAAD,CAAV,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANrB,EAOIA,KAAK,IAAI,CAAC,CAAD,CAAT,iBAEF;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,gBAAhB;AAAA,gCACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,eAGF;AAAK,UAAA,EAAE,EAAG,UAAV;AAAqB,UAAA,GAAG,EAAEN,SAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAHE,eAKF;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,iCACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBALE;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BH;;GAlDuBI,U;;KAAAA,U","sourcesContent":["import {React,useState,useEffect} from \"react\";\n\nimport \"../../styles/base.css\"\nimport NavBar from \"../../components/Navbar\"\nimport UserMeta from \"../../components/UserMeta\"\nimport winnerImg from \"../../assets/img/mockup/winner.jpeg\"\nimport VoteComponent from \"../../components/VoteComponent\";\nimport Auth from \"../../services/Auth\";\nimport PictureApi from \"../../api/PictureApi\"\n\n\nexport default function VotingPage() {\n   // Constants\n const API_URL ='https://my.api.mockaroo.com/user.json?key=ae007e80';\n\n //states\n  const [users,setUsers] = useState([]);\n  const randomId = Math.floor(Math.random() * 25) ;\n  \n\n\n  // Methods\n  //fetch data \n  useEffect(() => {\n   fetch(API_URL)\n     .then((response) => response.json())\n     .then((json) => setUsers(json));  \n }, []);\n\n console.log(users[randomId])\n\n    return (\n      <div className=\"general-container\">\n        <header>\n          <NavBar onLogout={() => Auth.logout()}/>\n        </header>\n\n\n        { users === [0] && <p>Loading Data ...</p>}\n        { users != [0] && \n\n        <main>\n            <div className =\"winner-content\">\n          <h1>Vote for this style ...</h1>\n          {/* <UserMeta users = {winner}/> */}\n          <img id = \"main-img\" src={winnerImg} alt=\"main-logo\" />\n\n          <div className=\"under-img-container\">\n           <VoteComponent />\n          </div>\n            </div>\n            \n        </main>\n        \n    }\n\n\n        <footer> Follow us | about SDA | About us </footer>\n      </div>\n    );\n      \n}\n"]},"metadata":{},"sourceType":"module"}