[{"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/index.js":"1","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/App.jsx":"2","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/services/Auth.js":"3","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/auth/AuthPage.jsx":"4","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/WinnerPage/WinnerPage.jsx":"5","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/ProfilePage/ProfilePage.jsx":"6","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/DiscoverPage/DiscoverPage.jsx":"7","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/VotingPage/VotingPage.jsx":"8","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/AuthApi.js":"9","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Navbar.jsx":"10","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Card.jsx":"11","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/VoteComponent.jsx":"12","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/UserMeta.jsx":"13","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/Api.js":"14","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/auth/LoginForm.jsx":"15","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/auth/RegisterForm.jsx":"16","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Popup.jsx":"17","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/PictureApi.js":"18","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/UploadButton.jsx":"19"},{"size":197,"mtime":1619781339005,"results":"20","hashOfConfig":"21"},{"size":1627,"mtime":1620026187689,"results":"22","hashOfConfig":"21"},{"size":1393,"mtime":1619781339008,"results":"23","hashOfConfig":"21"},{"size":1377,"mtime":1620026285738,"results":"24","hashOfConfig":"21"},{"size":938,"mtime":1620026666196,"results":"25","hashOfConfig":"21"},{"size":2385,"mtime":1620084354513,"results":"26","hashOfConfig":"21"},{"size":1703,"mtime":1620077651184,"results":"27","hashOfConfig":"21"},{"size":1633,"mtime":1620077023259,"results":"28","hashOfConfig":"21"},{"size":290,"mtime":1619781339000,"results":"29","hashOfConfig":"21"},{"size":1349,"mtime":1620067996531,"results":"30","hashOfConfig":"21"},{"size":609,"mtime":1620067625247,"results":"31","hashOfConfig":"21"},{"size":616,"mtime":1620026710476,"results":"32","hashOfConfig":"21"},{"size":515,"mtime":1620075597252,"results":"33","hashOfConfig":"21"},{"size":715,"mtime":1620026710473,"results":"34","hashOfConfig":"21"},{"size":538,"mtime":1620026281848,"results":"35","hashOfConfig":"21"},{"size":2097,"mtime":1619781339008,"results":"36","hashOfConfig":"21"},{"size":2776,"mtime":1619781339005,"results":"37","hashOfConfig":"21"},{"size":435,"mtime":1620065669913,"results":"38","hashOfConfig":"21"},{"size":2492,"mtime":1620083412513,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1u4uv4j",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/index.js",[],["86","87"],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/App.jsx",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/services/Auth.js",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/auth/AuthPage.jsx",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/WinnerPage/WinnerPage.jsx",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/ProfilePage/ProfilePage.jsx",["88","89","90","91"],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/DiscoverPage/DiscoverPage.jsx",["92","93"],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nimport \"../../styles/base.css\";\nimport NavBar from \"../../components/Navbar\";\nimport Card from \"../../components/Card\";\nimport Auth from \"../../services/Auth\";\nimport cat from \"../../assets/img/cat.png\";\nimport UploadButton from \"../../components/UploadButton\";\n\n\nexport default function DiscoverPage() {\n // Constants\n const API_URL ='https://my.api.mockaroo.com/user.json?key=ae007e80';\n\n//states\n const [users,setUsers] = useState([]);\n\n // Methods\n //fetch data \n useEffect(() => {\n  fetch(API_URL)\n    .then((response) => response.json())\n    .then((json) => setUsers(json));  \n}, []);\n\n  \n  return (\n    <div className=\"general-container\">\n      <header>\n        <NavBar onLogout={() => Auth.logout()} />\n      </header>\n\n      { users === [0] && <p>Loading Data ...</p>}\n    { users != [0] && \n\n      <main>\n        <div className=\"homepage-content\">\n\n          <div className=\"homepage-submit-container\" > \n          \n          </div>\n\n          <div>\n            <h2>Discover more styles ...</h2>\n            < UploadButton/>\n            <div className=\"card-small-container\">\n\n            <React.Fragment>\n                {users.map((item) => (\n                  <React.Fragment key={item.id}>\n                    <Card item = {item} score = {false} votes = {true}  meta = {true} />                                                  \n                  </React.Fragment>\n                ))}\n              </React.Fragment>\n             \n            </div>\n          </div>\n        </div>\n      </main>\n}\n\n      <footer> Follow us | about SDA | About us </footer>\n    </div>\n                \n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/VotingPage/VotingPage.jsx",["94","95"],"import {React,useState,useEffect} from \"react\";\n\nimport \"../../styles/base.css\"\nimport NavBar from \"../../components/Navbar\"\nimport UserMeta from \"../../components/UserMeta\"\nimport winnerImg from \"../../assets/img/mockup/winner.jpeg\"\nimport VoteComponent from \"../../components/VoteComponent\";\nimport Auth from \"../../services/Auth\";\nimport PictureApi from \"../../api/PictureApi\"\n\n\nexport default function VotingPage() {\n   // Constants\n const API_URL ='https://my.api.mockaroo.com/user.json?key=ae007e80';\n\n //states\n  const [users,setUsers] = useState([0]);\n  const randomId = Math.floor(Math.random() * 25) ;\n  const randomUser = users[randomId];\n  \n\n\n  // Methods\n  //fetch data \n  useEffect(() => {\n   fetch(API_URL)\n     .then((response) => response.json())\n     .then((json) => setUsers(json));  \n }, []);\n\n\n console.log(randomUser);\n\n    return (\n      <div className=\"general-container\">\n        <header>\n          <NavBar onLogout={() => Auth.logout()}/>\n        </header>\n\n\n        { randomUser  === undefined && <p>Loading Data ...</p>}\n\n        { randomUser !== undefined && \n\n        <main>\n            <div className =\"winner-content\">\n          <h1>Vote for this style ...</h1>\n          <UserMeta users = {randomUser} /> \n\n          <div className=\"wrapper-img-square\">\n          <img id = \"main-img\" src={randomUser.pictures[0].url} alt=\"main-logo\" />\n        </div>\n          <div className=\"under-img-container\">\n           <VoteComponent />\n          </div>\n            </div>\n            \n        </main>\n        \n    }\n\n\n        <footer> Follow us | about SDA | About us </footer>\n      </div>\n    );\n      \n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/AuthApi.js",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Navbar.jsx",["96"],"import { React} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Popover } from \"@varld/popover\";\n\nimport homeButton from \"../assets/img/homeButton.png\"\nimport navLogo from \"../assets/img/logo/instyle.svg\"\n\nexport default function Navbar({ onLogout }) {\n  return (\n    <nav>\n      <div>\n        <Popover\n          popover={({ visible, open, close }) => {\n            return (\n              <div className=\"nav-dropdown\">\n\n                <Link to=\"/discover\" className=\"nav-link\">\n                  Discover\n                </Link>\n                <Link to=\"/profile\" className=\"nav-link\">\n                  Profile\n                </Link>\n                <Link to=\"/vote\" className=\"nav-link\">\n                  Vote\n                </Link>\n\n                <Link to=\"/winner\" className=\"nav-link\">\n                  Winner\n                </Link>\n                <button className=\"btn-menu-dropdown\" onClick={onLogout}>\n                  Logout\n                </button>\n              </div>\n            );\n          }}\n        >\n          <button className=\"btn-menu\" ><img src= {homeButton} alt=\"menu\"/></button>\n        </Popover>\n      </div>\n      \n      <div></div> \n<img id =\"nav-logo\" src ={navLogo}></img> \n  \n<div id =\"nav-main-title\">\n  <strong>[In]Style</strong>\n  <p> Be the one</p>\n  </div>\n\n      \n    </nav>\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Card.jsx",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/VoteComponent.jsx",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/UserMeta.jsx",["97","98"],"import React from \"react\";\n\nimport userThumbnail from \"../assets/img/mockup/user-thumbnail.png\"\n\n\nexport default function UserMeta({users}) {\n  const randomUser = Math.floor(Math.random() * 4);\n\n    return (\n      <div className=\"user-meta\">\n        <img src = {users.avatar} alt=\"thumb\"/>\n        <div className = \"user-meta-legend\">\n          <p className=\"user-username\">{users.firstname} {users.lastname}</p>\n          <p className=\"user-instagram\">@{users.instagram}</p>\n\n        </div>\n\n      </div>\n    );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/Api.js",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/auth/LoginForm.jsx",["99","100"],"// NPM Packages\nimport React, { useState } from \"react\";\nimport Popup from \"../../components/Popup\";\n\n\n\nexport default function LoginForm({ onSubmit }) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    console.log(\"email\",email);\n    console.log(\"pass\",password);\n\n\n    //Methods\n\n    return (\n        <div className=\"card-body\">\n            <Popup onSubmit={onSubmit} signIn={true} />\n            <Popup onSubmit={onSubmit} signIn={false}/>\n                \n            </div>\n\n    );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/auth/RegisterForm.jsx",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Popup.jsx",["101"],"import { Popover } from \"@varld/popover\";\nimport React, { useState } from \"react\";\n\nexport default function Popup({ onSubmit, signIn }) {\n  //constants\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n \n  //Methods\n\n  function openPopup() {\n    //display the popup\n  }\n \n\n  return (\n    signIn === true ? (\n\n    //sign in button\n    <Popover\n      popover={() => {\n       \n\n        return (\n          <div className=\"popover-login\">\n            <div className=\"form-group\">\n              <label>Email:</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                className=\"form-control\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n\n            <button  \n            className=\"btn btn-info\"\n            onClick={() => onSubmit({ email, password })}\n            > Sign in</button>\n          </div>\n        \n        \n                \n        \n        );      \n        \n    }}\n    >\n      <button className=\"btn-blue\"> Sign in</button>\n    </Popover>\n\n  \n ) : (\n\n  //TODO - register button\n  <Popover\n  popover={() => {\n   \n\n    return (\n      <div className=\"popover-login\">\n        <div className=\"form-group\">\n          <label>Username:</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"form-control\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"form-control\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n\n        <button  \n        className=\"btn btn-info\"\n        onClick={() => onSubmit({ email, password })}\n        > Register</button>\n      </div>\n    \n    \n            \n    \n    );      \n    \n}}\n>\n  <button className=\"btn-blue\">Register</button>\n</Popover>\n\n\n )\n\n    \n\n\n\n\n\n\n\n\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/PictureApi.js",["102"],"import Api from \"./Api\";\nimport axios from \"axios\";\n\nclass PictureApi {\n\n\n//https://my.api.mockaroo.com/user.json?key=ae007e80\n\n  getAllpictures() {\n    return Api.get(\"/files\");\n  }\n/* \n  getPostById(id) {\n    return Api.get(\"/posts/\" + id);\n  }\n  \n  updatePost(id, post) {\n    return Api.put(`/posts/${id}`, post);\n  }\n\n  deletePost(id) {\n    return Api.delete(\"/posts/\" + id);\n  } */\n\n\n\n\n\n\n\n\n\n  \n}\n\nexport default new PictureApi();\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/UploadButton.jsx",["103","104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":12},{"ruleId":"110","severity":1,"message":"114","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":15},{"ruleId":"110","severity":1,"message":"115","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":20},{"ruleId":"110","severity":1,"message":"116","line":18,"column":11,"nodeType":"112","messageId":"113","endLine":18,"endColumn":21},{"ruleId":"110","severity":1,"message":"117","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":11},{"ruleId":"118","severity":1,"message":"119","line":36,"column":13,"nodeType":"120","messageId":"121","endLine":36,"endColumn":15},{"ruleId":"110","severity":1,"message":"122","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":17},{"ruleId":"110","severity":1,"message":"123","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":42,"column":1,"nodeType":"126","endLine":42,"endColumn":36},{"ruleId":"110","severity":1,"message":"127","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":21},{"ruleId":"110","severity":1,"message":"128","line":7,"column":9,"nodeType":"112","messageId":"113","endLine":7,"endColumn":19},{"ruleId":"110","severity":1,"message":"129","line":8,"column":19,"nodeType":"112","messageId":"113","endLine":8,"endColumn":27},{"ruleId":"110","severity":1,"message":"130","line":9,"column":22,"nodeType":"112","messageId":"113","endLine":9,"endColumn":33},{"ruleId":"110","severity":1,"message":"131","line":11,"column":12,"nodeType":"112","messageId":"113","endLine":11,"endColumn":21},{"ruleId":"110","severity":1,"message":"132","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"110","severity":1,"message":"123","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":18},{"ruleId":"110","severity":1,"message":"133","line":27,"column":10,"nodeType":"112","messageId":"113","endLine":27,"endColumn":13},{"ruleId":"110","severity":1,"message":"134","line":27,"column":15,"nodeType":"112","messageId":"113","endLine":27,"endColumn":21},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'janeImg' is defined but never used.","'UploadButton' is defined but never used.","'dataLoaded' is assigned a value but never used.","'cat' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'winnerImg' is defined but never used.","'PictureApi' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'userThumbnail' is defined but never used.","'randomUser' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'openPopup' is defined but never used.","'axios' is defined but never used.","'pic' is assigned a value but never used.","'setPic' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]